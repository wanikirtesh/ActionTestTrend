name: Run with DD Agent

on:
  workflow_dispatch:
    inputs:
      URL:
        description: 'URL to test'
        required: true
        default: 'https://example.com'
      VU:
        description: 'Number of virtual users'
        required: true
        default: '10'
      DURATION:
        description: 'Test duration (e.g., 30s, 1m)'
        required: true
        default: '30s'
      TAG:
        description: 'Tag for the run'
        required: true
        default: 'Regression'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set TimeStamp
        run: echo "TIMESTAMP=$(date +"%Y%m%d%H%M%S")" >> $GITHUB_ENV
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Specify your Node.js version

      - name: Install dependencies
        run: npm install

      - name: Create Docker Network
        run: docker network create my_network
      - name: Start Datadog Agent
        run: |
          docker run -d --name datadog-agent -p 8125:8125/udp \
          --network my_network \
          -e DD_API_KEY=${{ secrets.DATADOG_API_KEY }} \
          -e DD_SITE="datadoghq.com" \
          -e DD_DOGSTATSD_NON_LOCAL_TRAFFIC=1 \
          -e DD_LOGS_ENABLED=true \
          datadog/agent:latest
      - name: Wait for Datadog Agent to initialize
        run: sleep 10
      - name: Test Datadog Agent Connection
        run: |
          docker run --rm --network my_network busybox sh -c \
          "nc -zv datadog-agent 8125 || echo 'Connection to datadog-agent:8125 failed'"
      - name: Run K6 tests with Datadog Agent
        run: |
          docker run --user root --network my_network -v "${{ github.workspace }}:/test" loadimpact/k6:0.30.0 \
          run /test/test/perf.js --out datadog --out json=/test/results/result_$TIMESTAMP.json \
          --env K6_DATADOG_AGENT_URL="http://datadog-agent:8125" \
          --env VU=${{github.event.inputs.VU}} \
          --env URL=${{github.event.inputs.URL}} \
          --tag tag=${{github.event.inputs.TAG}} \
          --env DURATION=${{github.event.inputs.DURATION}} \
          --env TIMESTAMP=$TIMESTAMP
      - name: Update JavaScript file
        run: |
          echo "results.push({'timestamp':'$TIMESTAMP','tag':'${{github.event.inputs.TAG}}'});" >> allResults/jsFile.js
      - name: Commit and push results
        run: |
          echo "K6 test results saved at results_$TIMESTAMP.json"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add results/* allResults/*
          git commit -m "Add K6 results for $TIMESTAMP"
          git pull -r
          git push
        env:
            GITHUB_TOKEN: ${{ secrets.TOKEN }}
